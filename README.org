* indent-tools

Indent,  move around  and  act  on code  based  on indentation  (yaml,
python, jade, etc).

Meant for indentation-based  languages, but can be used  any time with
indented text.

Example:

#+BEGIN_SRC python
if True:
    pass
if False: # <- point on this line, call M-x indent-tools
    pass
print
#+END_SRC
you get
#+BEGIN_SRC python
if True:
    pass
    if False: # <- indented
        pass
print
#+END_SRC

** Installation

Clone te repo and evaluate the file (=M-x load-file=).

** Usage

Just use  the hydra, it shows  all available options and  it allows to
call an action multiple times in a row:
: M-x indent-tools-hydra/body

Shortcut put at =C-c >=.

To bind this in python-mode:
#+BEGIN_SRC emacs-lisp
(add-hook 'python-mode-hook
 (lambda () (define-key python-mode-map (kbd "C-c >") 'indent-tools-hydra/body))
)

#+END_SRC
(=C-c >= originally bound to indent the line).

*** Indent, de-indent

Indent an  indentation tree: =M-x indent-tools-demote=.   This indents
according to  the major  mode (currently specially  supported: python,
jade,     yaml.     For     other     modes,     it     indents     by
=indent-tools-indent-offset=, 4 spaces).

With the hydra, repeat this action as much as you wish.

Indent by only *one space* (useful for jade-mode): =SPC= key with the hydra.

Indent  the *paragraph*:  =M-x indent-tools-indent-paragraph=,  or =P=
with the hydra.

See also: (de)indenting until the end of the current indentation level
(i.e., indent every nodes with the same level).

*** Move around

 Move to the *end of the current indentation*,

 to the *next* or the *previous sibling* (a line with the same indentation),

 move  *one parent  up* or  the  first *child  down* (line  with lesser  or
 greater indentation), much useful for a  large yaml file, but also for
 code navigation.

 *j* and *k* (with the hydra) as usual go to the next and previous line.

*** Kill, copy, comment, select indentation tree / level / paragraph

See the  hydra. When you choose  an action (kill, copy,  comment), you
are then asked what to operate upon: the indentation tree, level, or paragraph.

There are the interactive functions too:

 : M-x indent-tools-kill-[hydra/body, tree, level, paragraph]

 Copying:

 : M-x indent-tools-copy-[hydra/body, tree, level, paragraph]

** Develop

To run the unit tests, go into the tests file and run *ert*:
: M-x ert
and either choose a specific test, either keep =t= to run all.

You'll have an ert buffer with passing tests in green, failing ones in
red. Use TAB end ENTER in this buffer (Ã  la org-mode).

** Ideas, todos

[X] Demote.

[X] Indent according to mode. Done for python, yaml and jade.

[X] Do something with the default  behaviour of =M-x indent-rigidly= which
lets us indent  interactively. Would be useful for  jade templates. =>
just used the Hydra feature.

[X] See if  the utilities functions  of mine  on [[https://gitlab.com/emacs-stuff/my-elisp/blob/master/yaml-utils.el][yaml-utils]] can  be useful
(indent all siblings at once ? Move around siblings ?).

See `move-text` in melpa to move regions up and down.

See how [[https://github.com/zenozeng/yafolding.el/blob/master/yafolding.el][yafolding]] did.
