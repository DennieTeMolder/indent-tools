* Tree-promote

Promote and demote a tree for  quick and easy code manipulation. Think
org-mode, but for code.

Meant for indentation-based languages.

Warning: horrible and rough implementation, but yet super great !

Example:

#+BEGIN_SRC python
def foo(): # <- point on this line, call M-x tree-promote
    pass
print
#+END_SRC
you get
#+BEGIN_SRC python
    def foo():
        pass
print
#+END_SRC

** Installation

Clone te repo and evaluate the file (=M-x load-file=).

** Usage

Shortcut put at =C-c >=.

Just use  the hydra, it shows  all available options and  it allows to
call an action multiple times in a row:
: M-x tree-promot-hydra/body

*** Indent, de-indent

Indent an  indentation tree:  =M-x tree-promote-demote=.  This indents
according to the major mode (currently supported: python, jade, yaml).

With the hydra, repeat this action as much as you wish.

Indent by only one space (useful for jade-mode): =SPC= key with the hydra.

** Delete, comment, select

Delete the tree:
: M-x tree-promote-kill

Comment it:
: M-x tree-promote-comment

And also: select it.

** Move

Move to the *end of the tree*,

to the *next* or the *previous sibling* (a line with the same indentation),

move  *one parent  up* or  the  first *child  down* (line  with lesser  or
greater indentation), much useful for a  large yaml file, but also for
code navigation.


** Ideas, todos

[X] Demote.

[X] Indent according to mode. Done for python, yaml and jade.

[X] Do something with the default  behaviour of =M-x indent-rigidly= which
lets us indent  interactively. Would be useful for  jade templates. =>
just used the Hydra feature.

[X] See if  the utilities functions  of mine  on [[https://gitlab.com/emacs-stuff/my-elisp/blob/master/yaml-utils.el][yaml-utils]] can  be useful
(indent all siblings at once ? Move around siblings ?).

See `move-text` in melpa to move regions up and down.
